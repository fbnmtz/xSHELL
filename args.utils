#!/usr/bin/env bash
#
# ############################################################################
# Project: xSHELL (none)
# File...: args.utils
# Created: Thursday, 2021/05/20 - 00:26:27
# Author.: Fabiano Matos, fgm (fabiano.matoz@gmail.com)
# ~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~~·~·~·~·~·~·~·~
# Last Modified: Thursday, 2025/02/13 - 22:45:00
# Modified By..: @fbnmtz, (fabiano.matoz@gmail.com)
# ~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~~·~·~·~·~·~·~·~
# Version: 1.0.11.471
# ~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~~·~·~·~·~·~·~·~
# Description: 
#  >
# ############################################################################
# HISTORY:
#

_xLIB_ARGS_UTILS_=true

# define version of script
xversion(){
    # set app version (dynamic from header comments or static)
    [ -z "$_VERSION_" ] && _VERSION_="$(head -n 20 "$0" | \
        grep '# Version:' -m1 | \
        tr -d ' ' | \
        cut -d ':' -f2 | \
        cut -d '.' -f1-3 \
    )"
    # get release candidate 
    local release_candidate="$(head -n 20 "$0" | \
        grep '# Version:' -m1 | \
        tr -d ' ' | \
        cut -d ':' -f2 | \
        cut -d '.' -f4 \
    )"

    _VERSIONRC_="$_VERSION_-rc$release_candidate"
    [ -z "$_VERSION_" ] && _VERSION_='0.0.1'
}

# define when script was created
xcreated(){
    # set app version (dynamic from header comments or static)
    [ -z "$_CREATED_AT_" ] && _CREATED_AT_="$(head -n 20 "$0" | \
        grep '# Created:' -m1 | \
        tr -d ' ' | \
        cut -d ':' -f2 | \
        cut -d ',' -f2 | \
        cut -d '-' -f1 | \
        cut -d '/' -f1 \
    )"
    # not found date in header comments, try filestats
    [ -z "$_CREATED_AT_" ] && \
        _CREATED_AT_="$(stat "$0" | \
            grep Birth  | \
            cut -d ' ' -f3 | \
            cut -d '.' -f1 | \
            cut -d '-' -f1 \
        )"
    # still null? set as unknown, to be filed later
    [ -z "$_CREATED_AT_" ] && _CREATED_AT_='<unknown>'
}

# define when script was updated
xupdated(){
    # set app version (dynamic from header comments or static)
    [ -z "$_UPDATED_AT_" ] && _UPDATED_AT_="$(head -n 20 "$0" | \
        grep '# Last Modified:' -m1 | \
        tr -d ' ' | \
        cut -d ':' -f2 | \
        cut -d ',' -f2 | \
        cut -d '-' -f1 | \
        tr -d '/'
    )"
        # cut -d '/' -f1 \
    # not found date in header comments, try filestats
    [ -z "$_UPDATED_AT_" ] && \
        _UPDATED_AT_="$(stat "$0" | \
            grep Birth  | \
            cut -d ' ' -f3 | \
            cut -d '.' -f1 | \
            cut -d '-' -f1 \
        )"
    # still null? set as unknown, to be filed later
    [ -z "$_UPDATED_AT_" ] && _UPDATED_AT_='<unknown>'
}

# define author of script
xauthor(){
    [ -z "$_AUTHOR_" ] && _AUTHOR_=$(
        head -n 20 "$0" | \
        grep '# Author.:' -m1 | \
        cut -d ':' -f2 |\
        cut -d ',' -f1 |\
        cut -c2-
    )
    # not found author in header comments, try get by git config
    [ -z "$_AUTHOR_" ] && _AUTHOR_=$(git config --global user.name)
    [ -z "$_AUTHOR_" ] && _AUTHOR_=$(git config --global user.email)
    [ -z "$_AUTHOR_" ] && _AUTHOR_=$(git config --global author.name)
    [ -z "$_AUTHOR_" ] && _AUTHOR_=$(git config --global author.email)
    # still null? try by $USER variable
    [ -z "$_AUTHOR_" ] && _AUTHOR_="$USER"
    # null? set as unknown, to be filled in later
    [ -z "$_AUTHOR_" ] && _AUTHOR_='<unknown>'
}
